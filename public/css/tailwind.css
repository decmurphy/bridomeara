/*
! tailwindcss v3.3.3 | MIT License | https://tailwindcss.com
*//*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: #e5e7eb; /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
*/

html {
  line-height: 1.5; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
  -moz-tab-size: 4; /* 3 */
  -o-tab-size: 4;
     tab-size: 4; /* 3 */
  font-family: Montserrat; /* 4 */
  font-feature-settings: normal; /* 5 */
  font-variation-settings: normal; /* 6 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0; /* 1 */
  line-height: inherit; /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
  border-top-width: 1px; /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  text-decoration: underline;
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
  border-collapse: collapse; /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-feature-settings: inherit; /* 1 */
  font-variation-settings: inherit; /* 1 */
  font-size: 100%; /* 1 */
  font-weight: inherit; /* 1 */
  line-height: inherit; /* 1 */
  color: inherit; /* 1 */
  margin: 0; /* 2 */
  padding: 0; /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button; /* 1 */
  background-color: transparent; /* 2 */
  background-image: none; /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/
dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/
:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */
[hidden] {
  display: none;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgba(59, 130, 246, 0.5);
  --tw-ring-offset-shadow: 0 0 rgba(0,0,0,0);
  --tw-ring-shadow: 0 0 rgba(0,0,0,0);
  --tw-shadow: 0 0 rgba(0,0,0,0);
  --tw-shadow-colored: 0 0 rgba(0,0,0,0);
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgba(59, 130, 246, 0.5);
  --tw-ring-offset-shadow: 0 0 rgba(0,0,0,0);
  --tw-ring-shadow: 0 0 rgba(0,0,0,0);
  --tw-shadow: 0 0 rgba(0,0,0,0);
  --tw-shadow-colored: 0 0 rgba(0,0,0,0);
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}
/* This is all you. */
@media (min-width: 1640px) {
    /* 
        0.5 * (100% - 1280px) is the width of the gutter in xl screens
        147px is the width of the triskelle in the logo
        this will make the start of "Brid" line up with the vision text below
    */
    .hero_large {
        margin-left: -173px;
    }
}
.parallax {
    perspective: 300px;
    height: 100vh;
    overflow-x: hidden;
    overflow-y: auto;
}
.parallax__group {
    position: relative;
    height: 100vh;
    transform-style: preserve-3d;
    /* transform: translate3d(700px, 0, -800px) rotateY(30deg); */
}
.parallax__layer {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
}
.parallax__layer--base {
    transform: translateZ(0);
}
.parallax__layer--back {
    transform: translateZ(-600px) scale(3.9);
    /* background-image: var(--backgroundImageUrl); */
    background-position: right;
}
/*
    Convert a chevron-right icon into an arrow-right icon on hover. 
    Translate and delayed opacity transitions, reversed transitions on unhover
    See buttons on /home for reference. 
    • Must add .absolute to svgs and put them centered in a div.relative 
    • Must add .animated-icon-link to button/link
*/
.animated-icon-link .chevron-right {
        transition: opacity 150ms linear 0s, transform 150ms linear 150ms;
    }
.animated-icon-link .arrow-right {
        transition: opacity 150ms linear 0s;
        opacity: 0;
    }
.animated-icon-link:hover .chevron-right {
            transition: transform 150ms linear 0s, opacity 150ms linear 150ms;
            transform: translateX(6px);
            opacity: 0;
        }
.animated-icon-link:hover .arrow-right {
            transition-delay: 150ms;
            opacity: 1;
        }
nav .links li:hover > ul {
    animation: fadeInRight 0.3s ease;
    -webkit-animation: fadeInRight 0.3s ease;
}
@keyframes fadeInRight {
    0% {
        opacity: 0;
        transform: translate3d(100%, 0, 0);
    }
    100% {
        opacity: 1;
        transform: none;
    }
}
.menu-container:not(.dropdown-visible) {
    z-index: -10;
    perspective: 20000px;
    transform: translateY(-320px);
}
.menu-container:not(.dropdown-visible) .menu-card {
    height: 320px;
    transform: rotateX(-90deg);
}
.menu-container.dropdown-visible {
    z-index: -10;
    perspective: 20000px;
    transform: translateY(0px);
}
.menu-container.dropdown-visible .menu-card {
    height: 320px;
    transform: rotateX(0deg);
}
.gradient.left.large {
        background: linear-gradient(
            to right,
            white 5%,
            rgba(255, 255, 255, 0) 30%
        );
    }
.gradient.bottom {
        background: linear-gradient(
            to top,
            white 0%,
            rgba(255, 255, 255, 0) 10%
        );
    }
.prose {
  color: var(--tw-prose-body);
  max-width: 65ch;
}
.prose :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}
.prose :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}
.prose :where(a):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-links);
  -webkit-text-decoration: underline;
  text-decoration: underline;
  font-weight: 500;
}
.prose :where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}
.prose :where(a strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(blockquote strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(thead th strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}
.prose :where(ol[type="A"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}
.prose :where(ol[type="a"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}
.prose :where(ol[type="A" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}
.prose :where(ol[type="a" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}
.prose :where(ol[type="I"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-roman;
}
.prose :where(ol[type="i"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-roman;
}
.prose :where(ol[type="I" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-roman;
}
.prose :where(ol[type="i" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-roman;
}
.prose :where(ol[type="1"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: decimal;
}
.prose :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}
.prose :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}
.prose :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
  color: var(--tw-prose-bullets);
}
.prose :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.25em;
}
.prose :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}
.prose :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-left-width: 0.25rem;
  border-left-color: var(--tw-prose-quote-borders);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-left: 1em;
}
.prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
  content: open-quote;
}
.prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
  content: close-quote;
}
.prose :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}
.prose :where(h1 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 900;
  color: inherit;
}
.prose :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}
.prose :where(h2 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 800;
  color: inherit;
}
.prose :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}
.prose :where(h3 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}
.prose :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}
.prose :where(h4 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}
.prose :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  display: block;
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 500;
  font-family: inherit;
  color: var(--tw-prose-kbd);
  box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
  font-size: 0.875em;
  border-radius: 0.3125rem;
  padding-top: 0.1875em;
  padding-right: 0.375em;
  padding-bottom: 0.1875em;
  padding-left: 0.375em;
}
.prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}
.prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
  content: "`";
}
.prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
  content: "`";
}
.prose :where(a code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(h1 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.875em;
}
.prose :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.9em;
}
.prose :where(h4 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(blockquote code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(thead th code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-right: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-left: 1.1428571em;
}
.prose :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}
.prose :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
  content: none;
}
.prose :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
  content: none;
}
.prose :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}
.prose :where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}
.prose :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}
.prose :where(tbody tr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}
.prose :where(tbody tr:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-bottom-width: 0;
}
.prose :where(tbody td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  vertical-align: baseline;
}
.prose :where(tfoot):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}
.prose :where(tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  vertical-align: top;
}
.prose :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}
.prose :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}
.prose {
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-kbd: #111827;
  --tw-prose-kbd-shadows: 17 24 39;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-kbd: #fff;
  --tw-prose-invert-kbd-shadows: 255 255 255;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgba(0, 0, 0, 0.5);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}
.prose :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}
.prose :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}
.prose :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-left: 0.375em;
}
.prose :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-left: 0.375em;
}
.prose :where(.prose > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.prose :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
}
.prose :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}
.prose :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
}
.prose :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}
.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.prose :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}
.prose :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.5em;
  padding-left: 1.625em;
}
.prose :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-left: 0;
}
.prose :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-right: 0;
}
.prose :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-top: 0.5714286em;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}
.prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-left: 0;
}
.prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-right: 0;
}
.prose :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(.prose > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(.prose > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 0;
}
.fixed {
  position: fixed !important;
}
.absolute {
  position: absolute !important;
}
.relative {
  position: relative !important;
}
.sticky {
  position: sticky !important;
}
.inset-0 {
  top: 0 !important;
  right: 0 !important;
  bottom: 0 !important;
  left: 0 !important;
}
.-left-20 {
  left: -5rem !important;
}
.bottom-0 {
  bottom: 0 !important;
}
.bottom-24 {
  bottom: 6rem !important;
}
.left-0 {
  left: 0 !important;
}
.left-4 {
  left: 1rem !important;
}
.right-0 {
  right: 0 !important;
}
.right-4 {
  right: 1rem !important;
}
.top-0 {
  top: 0 !important;
}
.top-16 {
  top: 4rem !important;
}
.top-24 {
  top: 6rem !important;
}
.top-8 {
  top: 2rem !important;
}
.z-0 {
  z-index: 0 !important;
}
.z-10 {
  z-index: 10 !important;
}
.z-50 {
  z-index: 50 !important;
}
.float-right {
  float: right !important;
}
.mx-auto {
  margin-left: auto !important;
  margin-right: auto !important;
}
.my-12 {
  margin-top: 3rem !important;
  margin-bottom: 3rem !important;
}
.my-2 {
  margin-top: 0.5rem !important;
  margin-bottom: 0.5rem !important;
}
.my-4 {
  margin-top: 1rem !important;
  margin-bottom: 1rem !important;
}
.my-8 {
  margin-top: 2rem !important;
  margin-bottom: 2rem !important;
}
.-ml-16 {
  margin-left: -4rem !important;
}
.mb-12 {
  margin-bottom: 3rem !important;
}
.mb-16 {
  margin-bottom: 4rem !important;
}
.mb-2 {
  margin-bottom: 0.5rem !important;
}
.mb-24 {
  margin-bottom: 6rem !important;
}
.mb-3 {
  margin-bottom: 0.75rem !important;
}
.mb-32 {
  margin-bottom: 8rem !important;
}
.mb-36 {
  margin-bottom: 9rem !important;
}
.mb-4 {
  margin-bottom: 1rem !important;
}
.mb-8 {
  margin-bottom: 2rem !important;
}
.ml-12 {
  margin-left: 3rem !important;
}
.ml-4 {
  margin-left: 1rem !important;
}
.ml-8 {
  margin-left: 2rem !important;
}
.mr-4 {
  margin-right: 1rem !important;
}
.mr-6 {
  margin-right: 1.5rem !important;
}
.mr-8 {
  margin-right: 2rem !important;
}
.mt-16 {
  margin-top: 4rem !important;
}
.mt-2 {
  margin-top: 0.5rem !important;
}
.mt-20 {
  margin-top: 5rem !important;
}
.mt-5 {
  margin-top: 1.25rem !important;
}
.mt-6 {
  margin-top: 1.5rem !important;
}
.mt-8 {
  margin-top: 2rem !important;
}
.block {
  display: block !important;
}
.inline-block {
  display: inline-block !important;
}
.flex {
  display: flex !important;
}
.grid {
  display: grid !important;
}
.hidden {
  display: none !important;
}
.h-12 {
  height: 3rem !important;
}
.h-16 {
  height: 4rem !important;
}
.h-32 {
  height: 8rem !important;
}
.h-6 {
  height: 1.5rem !important;
}
.h-80 {
  height: 20rem !important;
}
.h-auto {
  height: auto !important;
}
.h-full {
  height: 100% !important;
}
.h-screen {
  height: 100vh !important;
}
.max-h-75vh {
  max-height: 75vh !important;
}
.max-h-80 {
  max-height: 20rem !important;
}
.min-h-12 {
  min-height: 3rem !important;
}
.min-h-48 {
  min-height: 12rem !important;
}
.min-h-screen {
  min-height: 100vh !important;
}
.w-1\/3 {
  width: 33.333333% !important;
}
.w-11\/12 {
  width: 91.666667% !important;
}
.w-120 {
  width: 30rem !important;
}
.w-2\/3 {
  width: 66.666667% !important;
}
.w-40 {
  width: 10rem !important;
}
.w-6 {
  width: 1.5rem !important;
}
.w-72 {
  width: 18rem !important;
}
.w-8\/12 {
  width: 66.666667% !important;
}
.w-auto {
  width: auto !important;
}
.w-full {
  width: 100% !important;
}
.w-screen {
  width: 100vw !important;
}
.max-w-11\/12 {
  max-width: 91.666667% !important;
}
.max-w-full {
  max-width: 100% !important;
}
.max-w-screen-xl {
  max-width: 1280px !important;
}
.flex-1 {
  flex: 1 1 0% !important;
}
.flex-grow {
  flex-grow: 1 !important;
}
.grow {
  flex-grow: 1 !important;
}
.origin-top {
  transform-origin: top !important;
}
.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
}
.resize-y {
  resize: vertical !important;
}
.flex-row {
  flex-direction: row !important;
}
.flex-col {
  flex-direction: column !important;
}
.flex-col-reverse {
  flex-direction: column-reverse !important;
}
.items-start {
  align-items: flex-start !important;
}
.items-center {
  align-items: center !important;
}
.items-stretch {
  align-items: stretch !important;
}
.justify-start {
  justify-content: flex-start !important;
}
.justify-end {
  justify-content: flex-end !important;
}
.justify-center {
  justify-content: center !important;
}
.justify-between {
  justify-content: space-between !important;
}
.space-x-8 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0 !important;
  margin-right: calc(2rem * 0) !important;
  margin-right: calc(2rem * var(--tw-space-x-reverse)) !important;
  margin-left: calc(2rem * (1 - 0)) !important;
  margin-left: calc(2rem * (1 - var(--tw-space-x-reverse))) !important;
  margin-left: calc(2rem * calc(1 - 0)) !important;
  margin-left: calc(2rem * calc(1 - var(--tw-space-x-reverse))) !important;
}
.space-y-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0 !important;
  margin-top: calc(0.5rem * (1 - 0)) !important;
  margin-top: calc(0.5rem * (1 - var(--tw-space-y-reverse))) !important;
  margin-top: calc(0.5rem * calc(1 - 0)) !important;
  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse))) !important;
  margin-bottom: calc(0.5rem * 0) !important;
  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse)) !important;
}
.space-y-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0 !important;
  margin-top: calc(1rem * (1 - 0)) !important;
  margin-top: calc(1rem * (1 - var(--tw-space-y-reverse))) !important;
  margin-top: calc(1rem * calc(1 - 0)) !important;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse))) !important;
  margin-bottom: calc(1rem * 0) !important;
  margin-bottom: calc(1rem * var(--tw-space-y-reverse)) !important;
}
.space-y-8 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0 !important;
  margin-top: calc(2rem * (1 - 0)) !important;
  margin-top: calc(2rem * (1 - var(--tw-space-y-reverse))) !important;
  margin-top: calc(2rem * calc(1 - 0)) !important;
  margin-top: calc(2rem * calc(1 - var(--tw-space-y-reverse))) !important;
  margin-bottom: calc(2rem * 0) !important;
  margin-bottom: calc(2rem * var(--tw-space-y-reverse)) !important;
}
.overflow-auto {
  overflow: auto !important;
}
.overflow-hidden {
  overflow: hidden !important;
}
.overflow-x-hidden {
  overflow-x: hidden !important;
}
.whitespace-normal {
  white-space: normal !important;
}
.rounded {
  border-radius: 0.25rem !important;
}
.rounded-lg {
  border-radius: 0.5rem !important;
}
.rounded-sm {
  border-radius: 0.125rem !important;
}
.rounded-r-full {
  border-top-right-radius: 9999px !important;
  border-bottom-right-radius: 9999px !important;
}
.border {
  border-width: 1px !important;
}
.border-b {
  border-bottom-width: 1px !important;
}
.border-b-2 {
  border-bottom-width: 2px !important;
}
.border-solid {
  border-style: solid !important;
}
.border-gray-300 {
  --tw-border-opacity: 1 !important;
  border-color: rgba(209, 213, 219, 1) !important;
  border-color: rgba(209, 213, 219, var(--tw-border-opacity)) !important;
}
.border-primary-800 {
  --tw-border-opacity: 1 !important;
  border-color: rgba(54, 140, 138, 1) !important;
  border-color: rgba(54, 140, 138, var(--tw-border-opacity)) !important;
}
.border-warn-500 {
  --tw-border-opacity: 1 !important;
  border-color: rgba(250, 164, 25, 1) !important;
  border-color: rgba(250, 164, 25, var(--tw-border-opacity)) !important;
}
.bg-accent-300 {
  --tw-bg-opacity: 1 !important;
  background-color: rgba(250, 229, 239, 1) !important;
  background-color: rgba(250, 229, 239, var(--tw-bg-opacity)) !important;
}
.bg-accent-500 {
  --tw-bg-opacity: 1 !important;
  background-color: rgba(235, 142, 187, 1) !important;
  background-color: rgba(235, 142, 187, var(--tw-bg-opacity)) !important;
}
.bg-gray-400 {
  --tw-bg-opacity: 1 !important;
  background-color: rgba(156, 163, 175, 1) !important;
  background-color: rgba(156, 163, 175, var(--tw-bg-opacity)) !important;
}
.bg-gray-800 {
  --tw-bg-opacity: 1 !important;
  background-color: rgba(31, 41, 55, 1) !important;
  background-color: rgba(31, 41, 55, var(--tw-bg-opacity)) !important;
}
.bg-primary-500 {
  --tw-bg-opacity: 1 !important;
  background-color: rgba(137, 209, 208, 1) !important;
  background-color: rgba(137, 209, 208, var(--tw-bg-opacity)) !important;
}
.bg-transparent {
  background-color: transparent !important;
}
.bg-white {
  --tw-bg-opacity: 1 !important;
  background-color: rgba(255, 255, 255, 1) !important;
  background-color: rgba(255, 255, 255, var(--tw-bg-opacity)) !important;
}
.bg-gradient-to-r {
  background-image: linear-gradient(to right, var(--tw-gradient-stops)) !important;
}
.from-white {
  --tw-gradient-from: #fff var(--tw-gradient-from-position) !important;
  --tw-gradient-to: rgba(255, 255, 255, 0) var(--tw-gradient-to-position) !important;
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to) !important;
}
.via-white {
  --tw-gradient-to: rgba(255, 255, 255, 0)  var(--tw-gradient-to-position) !important;
  --tw-gradient-stops: var(--tw-gradient-from), #fff var(--tw-gradient-via-position), var(--tw-gradient-to) !important;
}
.to-transparent {
  --tw-gradient-to: transparent var(--tw-gradient-to-position) !important;
}
.bg-top {
  background-position: top !important;
}
.object-cover {
  -o-object-fit: cover !important;
     object-fit: cover !important;
}
.p-1 {
  padding: 0.25rem !important;
}
.p-3 {
  padding: 0.75rem !important;
}
.p-4 {
  padding: 1rem !important;
}
.px-0 {
  padding-left: 0px !important;
  padding-right: 0px !important;
}
.px-12 {
  padding-left: 3rem !important;
  padding-right: 3rem !important;
}
.px-4 {
  padding-left: 1rem !important;
  padding-right: 1rem !important;
}
.px-8 {
  padding-left: 2rem !important;
  padding-right: 2rem !important;
}
.py-1 {
  padding-top: 0.25rem !important;
  padding-bottom: 0.25rem !important;
}
.py-16 {
  padding-top: 4rem !important;
  padding-bottom: 4rem !important;
}
.py-2 {
  padding-top: 0.5rem !important;
  padding-bottom: 0.5rem !important;
}
.py-4 {
  padding-top: 1rem !important;
  padding-bottom: 1rem !important;
}
.py-8 {
  padding-top: 2rem !important;
  padding-bottom: 2rem !important;
}
.pb-12 {
  padding-bottom: 3rem !important;
}
.pb-3 {
  padding-bottom: 0.75rem !important;
}
.pb-32 {
  padding-bottom: 8rem !important;
}
.pl-16 {
  padding-left: 4rem !important;
}
.pr-4 {
  padding-right: 1rem !important;
}
.pt-12 {
  padding-top: 3rem !important;
}
.pt-16 {
  padding-top: 4rem !important;
}
.pt-4 {
  padding-top: 1rem !important;
}
.text-center {
  text-align: center !important;
}
.text-right {
  text-align: right !important;
}
.font-sans {
  font-family: Montserrat !important;
}
.font-serif {
  font-family: Source Serif Pro !important;
}
.text-2xl {
  font-size: 1.5rem !important;
  line-height: 2rem !important;
}
.text-3xl {
  font-size: 1.875rem !important;
  line-height: 2.25rem !important;
}
.text-4xl {
  font-size: 2.25rem !important;
  line-height: 2.5rem !important;
}
.text-5xl {
  font-size: 3rem !important;
  line-height: 1 !important;
}
.text-6xl {
  font-size: 3.75rem !important;
  line-height: 1 !important;
}
.text-base {
  font-size: 1rem !important;
  line-height: 1.5rem !important;
}
.text-lg {
  font-size: 1.125rem !important;
  line-height: 1.75rem !important;
}
.text-sm {
  font-size: 0.875rem !important;
  line-height: 1.25rem !important;
}
.text-xl {
  font-size: 1.25rem !important;
  line-height: 1.75rem !important;
}
.text-xs {
  font-size: 0.75rem !important;
  line-height: 1rem !important;
}
.font-light {
  font-weight: 300 !important;
}
.font-medium {
  font-weight: 500 !important;
}
.font-semibold {
  font-weight: 600 !important;
}
.uppercase {
  text-transform: uppercase !important;
}
.leading-tight {
  line-height: 1.25 !important;
}
.tracking-widest {
  letter-spacing: 0.1em !important;
}
.text-black {
  --tw-text-opacity: 1 !important;
  color: rgba(0, 0, 0, 1) !important;
  color: rgba(0, 0, 0, var(--tw-text-opacity)) !important;
}
.text-gray-600 {
  --tw-text-opacity: 1 !important;
  color: rgba(75, 85, 99, 1) !important;
  color: rgba(75, 85, 99, var(--tw-text-opacity)) !important;
}
.text-gray-700 {
  --tw-text-opacity: 1 !important;
  color: rgba(55, 65, 81, 1) !important;
  color: rgba(55, 65, 81, var(--tw-text-opacity)) !important;
}
.text-primary-700 {
  --tw-text-opacity: 1 !important;
  color: rgba(69, 176, 174, 1) !important;
  color: rgba(69, 176, 174, var(--tw-text-opacity)) !important;
}
.text-white {
  --tw-text-opacity: 1 !important;
  color: rgba(255, 255, 255, 1) !important;
  color: rgba(255, 255, 255, var(--tw-text-opacity)) !important;
}
.underline {
  text-decoration-line: underline !important;
}
.opacity-25 {
  opacity: 0.25 !important;
}
.shadow-2xl {
  --tw-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25) !important;
  --tw-shadow-colored: 0 25px 50px -12px var(--tw-shadow-color) !important;
  box-shadow: 0 0 rgba(0,0,0,0), 0 0 rgba(0,0,0,0), 0 25px 50px -12px rgba(0, 0, 0, 0.25) !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 rgba(0,0,0,0)), var(--tw-ring-shadow, 0 0 rgba(0,0,0,0)), var(--tw-shadow) !important;
}
.shadow-inner {
  --tw-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, 0.05) !important;
  --tw-shadow-colored: inset 0 2px 4px 0 var(--tw-shadow-color) !important;
  box-shadow: 0 0 rgba(0,0,0,0), 0 0 rgba(0,0,0,0), inset 0 2px 4px 0 rgba(0, 0, 0, 0.05) !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 rgba(0,0,0,0)), var(--tw-ring-shadow, 0 0 rgba(0,0,0,0)), var(--tw-shadow) !important;
}
.shadow-lg {
  --tw-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -4px rgba(0, 0, 0, 0.1) !important;
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color) !important;
  box-shadow: 0 0 rgba(0,0,0,0), 0 0 rgba(0,0,0,0), 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -4px rgba(0, 0, 0, 0.1) !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 rgba(0,0,0,0)), var(--tw-ring-shadow, 0 0 rgba(0,0,0,0)), var(--tw-shadow) !important;
}
.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter !important;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter !important;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter !important;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !important;
  transition-duration: 150ms !important;
}
.transition-all {
  transition-property: all !important;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !important;
  transition-duration: 150ms !important;
}
.duration-150 {
  transition-duration: 150ms !important;
}
.duration-250 {
  transition-duration: 250ms !important;
}
.duration-500 {
  transition-duration: 500ms !important;
}
.ease-in-out {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !important;
}
.ease-linear {
  transition-timing-function: linear !important;
}
.divider {
  border-style: solid;
  --tw-border-opacity: 1;
  border-color: rgba(75, 85, 99, 1);
  border-color: rgba(75, 85, 99, var(--tw-border-opacity));
}
.divider:not(.vertical) {
  margin-top: 1rem;
  margin-bottom: 1rem;
}
.divider:not(.vertical) {
  display: flex;
}
.divider:not(.vertical) {
  border-bottom-width: 1px;
}
.divider.vertical {
  margin-left: 1rem;
  margin-right: 1rem;
}
.divider.vertical {
  display: flex;
}
.divider.vertical {
  border-right-width: 1px;
}
a {
  cursor: pointer;
  --tw-text-opacity: 1;
  color: rgba(235, 142, 187, 1);
  color: rgba(235, 142, 187, var(--tw-text-opacity));
}
a:hover {
  --tw-text-opacity: 1;
  color: rgba(220, 56, 135, 1);
  color: rgba(220, 56, 135, var(--tw-text-opacity));
}
.btn {
  display: flex;
  cursor: pointer;
  flex-direction: row;
  align-items: center;
  justify-content: flex-start;
  border-radius: 0.5rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  padding-left: 1rem;
  padding-right: 1rem;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 250ms;
  transition-timing-function: linear;
}
.btn:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.btn.primary {
  --tw-bg-opacity: 1;
  background-color: rgba(137, 209, 208, 1);
  background-color: rgba(137, 209, 208, var(--tw-bg-opacity));
}
.btn.primary {
  --tw-text-opacity: 1;
  color: rgba(255, 255, 255, 1);
  color: rgba(255, 255, 255, var(--tw-text-opacity));
}
.btn.primary:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(174, 224, 223, 1);
  background-color: rgba(174, 224, 223, var(--tw-bg-opacity));
}
.btn.accent {
  --tw-bg-opacity: 1;
  background-color: rgba(235, 142, 187, 1);
  background-color: rgba(235, 142, 187, var(--tw-bg-opacity));
}
.btn.accent {
  --tw-text-opacity: 1;
  color: rgba(255, 255, 255, 1);
  color: rgba(255, 255, 255, var(--tw-text-opacity));
}
.btn.accent:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(243, 186, 213, 1);
  background-color: rgba(243, 186, 213, var(--tw-bg-opacity));
}
.btn.warn {
  --tw-bg-opacity: 1;
  background-color: rgba(250, 164, 25, 1);
  background-color: rgba(250, 164, 25, var(--tw-bg-opacity));
}
.btn.warn {
  --tw-text-opacity: 1;
  color: rgba(255, 255, 255, 1);
  color: rgba(255, 255, 255, var(--tw-text-opacity));
}
.btn.warn:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(251, 184, 75, 1);
  background-color: rgba(251, 184, 75, var(--tw-bg-opacity));
}
.btn.warn:hover {
  --tw-text-opacity: 1;
  color: rgba(75, 85, 99, 1);
  color: rgba(75, 85, 99, var(--tw-text-opacity));
}
.btn.raised {
  --tw-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 8px 10px -6px rgba(0, 0, 0, 0.1);
  --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);
  box-shadow: 0 0 rgba(0,0,0,0), 0 0 rgba(0,0,0,0), 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 8px 10px -6px rgba(0, 0, 0, 0.1);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 rgba(0,0,0,0)), var(--tw-ring-shadow, 0 0 rgba(0,0,0,0)), var(--tw-shadow);
}
.btn.fab {
  box-sizing: content-box;
}
.btn.fab {
  height: 1.5rem;
}
.btn.fab {
  width: 1.5rem;
}
.btn.fab {
  border-radius: 9999px;
}
.btn.fab {
  padding: 1rem;
}
.btn.fab {
  --tw-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
  --tw-shadow-colored: 0 25px 50px -12px var(--tw-shadow-color);
  box-shadow: 0 0 rgba(0,0,0,0), 0 0 rgba(0,0,0,0), 0 25px 50px -12px rgba(0, 0, 0, 0.25);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 rgba(0,0,0,0)), var(--tw-ring-shadow, 0 0 rgba(0,0,0,0)), var(--tw-shadow);
}
.btn.pill {
  display: flex;
}
.btn.pill {
  flex-direction: row;
}
.btn.pill {
  align-items: center;
}
.btn.pill {
  border-radius: 9999px;
}
.btn:active {
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.btn.disabled {
  pointer-events: none;
}
.btn.disabled {
  cursor: default;
}
.btn.disabled {
  opacity: 0.5;
}
.display-3 {
  margin-bottom: 2rem;
  font-family: Montserrat;
  font-size: 5rem;
  font-weight: 600;
  line-height: 1.25;
  letter-spacing: -0.05em;
}
@media (min-width: 1280px) {

  .display-3 {
    font-size: 6rem;
  }
}
.display-2 {
  margin-bottom: 2rem;
  font-family: Montserrat;
  font-size: 3rem;
  font-weight: 500;
  line-height: 1.25;
  letter-spacing: -0.025em;
}
@media (min-width: 1280px) {

  .display-2 {
    font-size: 3.75rem;
    line-height: 1;
  }
}
.display-1 {
  margin-bottom: 2rem;
  font-family: Montserrat;
  font-size: 3rem;
  font-weight: 400;
  line-height: 1.25;
}
@media (min-width: 1280px) {

  .display-1 {
    font-size: 3.75rem;
    line-height: 1;
  }
}
.headline {
  margin-bottom: 1rem;
  font-family: Montserrat;
  font-size: 2.25rem;
  line-height: 2.5rem;
  font-weight: 500;
  line-height: 1.25;
}
@media (min-width: 1280px) {

  .headline {
    font-size: 3rem;
    line-height: 1;
  }
}
.title-2 {
  margin-bottom: 1rem;
  font-family: Montserrat;
  font-size: 1.5rem;
  line-height: 2rem;
  font-weight: 400;
  line-height: 1.5;
}
@media (min-width: 1280px) {

  .title-2 {
    font-size: 1.875rem;
    line-height: 2.25rem;
  }
}
.title {
  margin-bottom: 1rem;
  font-family: Montserrat;
  font-size: 1.25rem;
  line-height: 1.75rem;
  font-weight: 400;
  line-height: 1.5;
}
.subheading-2 {
  font-family: Source Serif Pro;
  font-size: 1.125rem;
  line-height: 1.75rem;
  font-weight: 400;
  line-height: 1.5;
}
.subheading-1 {
  font-family: Source Serif Pro;
  font-size: 1rem;
  line-height: 1.5rem;
  font-weight: 400;
  line-height: 1.5;
}
.body-2 {
  font-family: Source Serif Pro;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 400;
  line-height: 1.5;
}
.body-1 {
  font-family: Source Serif Pro;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 400;
  line-height: 1.5;
}
.caption {
  font-family: Source Serif Pro;
  font-size: 0.75rem;
  line-height: 1rem;
  font-weight: 400;
  line-height: 1.5;
}
@media (min-width: 1024px) {

  .lg\:prose-xl {
    font-size: 1.25rem;
    line-height: 1.8;
  }

  .lg\:prose-xl :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 1.2em;
    margin-bottom: 1.2em;
  }

  .lg\:prose-xl :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    font-size: 1.2em;
    line-height: 1.5;
    margin-top: 1em;
    margin-bottom: 1em;
  }

  .lg\:prose-xl :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 1.6em;
    margin-bottom: 1.6em;
    padding-left: 1.0666667em;
  }

  .lg\:prose-xl :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    font-size: 2.8em;
    margin-top: 0;
    margin-bottom: 0.8571429em;
    line-height: 1;
  }

  .lg\:prose-xl :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    font-size: 1.8em;
    margin-top: 1.5555556em;
    margin-bottom: 0.8888889em;
    line-height: 1.1111111;
  }

  .lg\:prose-xl :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    font-size: 1.5em;
    margin-top: 1.6em;
    margin-bottom: 0.6666667em;
    line-height: 1.3333333;
  }

  .lg\:prose-xl :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 1.8em;
    margin-bottom: 0.6em;
    line-height: 1.6;
  }

  .lg\:prose-xl :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .lg\:prose-xl :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .lg\:prose-xl :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 0;
    margin-bottom: 0;
  }

  .lg\:prose-xl :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .lg\:prose-xl :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    font-size: 0.9em;
    border-radius: 0.3125rem;
    padding-top: 0.25em;
    padding-right: 0.4em;
    padding-bottom: 0.25em;
    padding-left: 0.4em;
  }

  .lg\:prose-xl :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    font-size: 0.9em;
  }

  .lg\:prose-xl :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    font-size: 0.8611111em;
  }

  .lg\:prose-xl :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    font-size: 0.9em;
  }

  .lg\:prose-xl :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    font-size: 0.9em;
    line-height: 1.7777778;
    margin-top: 2em;
    margin-bottom: 2em;
    border-radius: 0.5rem;
    padding-top: 1.1111111em;
    padding-right: 1.3333333em;
    padding-bottom: 1.1111111em;
    padding-left: 1.3333333em;
  }

  .lg\:prose-xl :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 1.2em;
    margin-bottom: 1.2em;
    padding-left: 1.6em;
  }

  .lg\:prose-xl :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 1.2em;
    margin-bottom: 1.2em;
    padding-left: 1.6em;
  }

  .lg\:prose-xl :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 0.6em;
    margin-bottom: 0.6em;
  }

  .lg\:prose-xl :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    padding-left: 0.4em;
  }

  .lg\:prose-xl :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    padding-left: 0.4em;
  }

  .lg\:prose-xl :where(.lg\:prose-xl > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 0.8em;
    margin-bottom: 0.8em;
  }

  .lg\:prose-xl :where(.lg\:prose-xl > ul > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 1.2em;
  }

  .lg\:prose-xl :where(.lg\:prose-xl > ul > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-bottom: 1.2em;
  }

  .lg\:prose-xl :where(.lg\:prose-xl > ol > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 1.2em;
  }

  .lg\:prose-xl :where(.lg\:prose-xl > ol > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-bottom: 1.2em;
  }

  .lg\:prose-xl :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 0.8em;
    margin-bottom: 0.8em;
  }

  .lg\:prose-xl :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 1.2em;
    margin-bottom: 1.2em;
  }

  .lg\:prose-xl :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 1.2em;
  }

  .lg\:prose-xl :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 0.6em;
    padding-left: 1.6em;
  }

  .lg\:prose-xl :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 2.8em;
    margin-bottom: 2.8em;
  }

  .lg\:prose-xl :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 0;
  }

  .lg\:prose-xl :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 0;
  }

  .lg\:prose-xl :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 0;
  }

  .lg\:prose-xl :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 0;
  }

  .lg\:prose-xl :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    font-size: 0.9em;
    line-height: 1.5555556;
  }

  .lg\:prose-xl :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    padding-right: 0.6666667em;
    padding-bottom: 0.8888889em;
    padding-left: 0.6666667em;
  }

  .lg\:prose-xl :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    padding-left: 0;
  }

  .lg\:prose-xl :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    padding-right: 0;
  }

  .lg\:prose-xl :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    padding-top: 0.8888889em;
    padding-right: 0.6666667em;
    padding-bottom: 0.8888889em;
    padding-left: 0.6666667em;
  }

  .lg\:prose-xl :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    padding-left: 0;
  }

  .lg\:prose-xl :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    padding-right: 0;
  }

  .lg\:prose-xl :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .lg\:prose-xl :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 0;
    margin-bottom: 0;
  }

  .lg\:prose-xl :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    font-size: 0.9em;
    line-height: 1.5555556;
    margin-top: 1em;
  }

  .lg\:prose-xl :where(.lg\:prose-xl > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 0;
  }

  .lg\:prose-xl :where(.lg\:prose-xl > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-bottom: 0;
  }
}
.hover\:bg-accent-400:hover {
  --tw-bg-opacity: 1 !important;
  background-color: rgba(243, 186, 213, 1) !important;
  background-color: rgba(243, 186, 213, var(--tw-bg-opacity)) !important;
}
.hover\:bg-primary-200:hover {
  --tw-bg-opacity: 1 !important;
  background-color: rgba(248, 252, 252, 1) !important;
  background-color: rgba(248, 252, 252, var(--tw-bg-opacity)) !important;
}
.hover\:bg-primary-500:hover {
  --tw-bg-opacity: 1 !important;
  background-color: rgba(137, 209, 208, 1) !important;
  background-color: rgba(137, 209, 208, var(--tw-bg-opacity)) !important;
}
.hover\:text-black:hover {
  --tw-text-opacity: 1 !important;
  color: rgba(0, 0, 0, 1) !important;
  color: rgba(0, 0, 0, var(--tw-text-opacity)) !important;
}
.hover\:text-primary-300:hover {
  --tw-text-opacity: 1 !important;
  color: rgba(211, 238, 237, 1) !important;
  color: rgba(211, 238, 237, var(--tw-text-opacity)) !important;
}
.hover\:text-primary-900:hover {
  --tw-text-opacity: 1 !important;
  color: rgba(40, 103, 102, 1) !important;
  color: rgba(40, 103, 102, var(--tw-text-opacity)) !important;
}
.focus\:border-primary-800:focus {
  --tw-border-opacity: 1 !important;
  border-color: rgba(54, 140, 138, 1) !important;
  border-color: rgba(54, 140, 138, var(--tw-border-opacity)) !important;
}
.focus\:shadow-md:focus {
  --tw-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1) !important;
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color) !important;
  box-shadow: 0 0 rgba(0,0,0,0), 0 0 rgba(0,0,0,0), 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1) !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 rgba(0,0,0,0)), var(--tw-ring-shadow, 0 0 rgba(0,0,0,0)), var(--tw-shadow) !important;
}
.focus\:outline-none:focus {
  outline: 2px solid transparent !important;
  outline-offset: 2px !important;
}
.group:hover .group-hover\:block {
  display: block !important;
}
@media (min-width: 640px) {

  .sm\:mt-8 {
    margin-top: 2rem !important;
  }

  .sm\:h-24 {
    height: 6rem !important;
  }

  .sm\:h-50vh {
    height: 50vh !important;
  }

  .sm\:w-5\/6 {
    width: 83.333333% !important;
  }

  .sm\:w-auto {
    width: auto !important;
  }

  .sm\:max-w-1\/2 {
    max-width: 50% !important;
  }

  .sm\:max-w-5\/6 {
    max-width: 83.333333% !important;
  }

  .sm\:py-12 {
    padding-top: 3rem !important;
    padding-bottom: 3rem !important;
  }

  .sm\:text-5xl {
    font-size: 3rem !important;
    line-height: 1 !important;
  }
}
@media (min-width: 768px) {

  .md\:mx-2 {
    margin-left: 0.5rem !important;
    margin-right: 0.5rem !important;
  }

  .md\:mx-auto {
    margin-left: auto !important;
    margin-right: auto !important;
  }

  .md\:my-16 {
    margin-top: 4rem !important;
    margin-bottom: 4rem !important;
  }

  .md\:mb-0 {
    margin-bottom: 0px !important;
  }

  .md\:mb-20 {
    margin-bottom: 5rem !important;
  }

  .md\:ml-0 {
    margin-left: 0px !important;
  }

  .md\:ml-4 {
    margin-left: 1rem !important;
  }

  .md\:mt-2 {
    margin-top: 0.5rem !important;
  }

  .md\:mt-20 {
    margin-top: 5rem !important;
  }

  .md\:block {
    display: block !important;
  }

  .md\:flex {
    display: flex !important;
  }

  .md\:hidden {
    display: none !important;
  }

  .md\:h-67vh {
    height: 67vh !important;
  }

  .md\:h-96 {
    height: 24rem !important;
  }

  .md\:w-1\/4 {
    width: 25% !important;
  }

  .md\:w-28 {
    width: 7rem !important;
  }

  .md\:w-5\/12 {
    width: 41.666667% !important;
  }

  .md\:w-5\/6 {
    width: 83.333333% !important;
  }

  .md\:w-7\/12 {
    width: 58.333333% !important;
  }

  .md\:min-w-120 {
    min-width: 30rem !important;
  }

  .md\:max-w-5\/12 {
    max-width: 41.666667% !important;
  }

  .md\:flex-row {
    flex-direction: row !important;
  }

  .md\:flex-row-reverse {
    flex-direction: row-reverse !important;
  }

  .md\:items-start {
    align-items: flex-start !important;
  }

  .md\:items-end {
    align-items: flex-end !important;
  }

  .md\:space-x-8 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0 !important;
    margin-right: calc(2rem * 0) !important;
    margin-right: calc(2rem * var(--tw-space-x-reverse)) !important;
    margin-left: calc(2rem * (1 - 0)) !important;
    margin-left: calc(2rem * (1 - var(--tw-space-x-reverse))) !important;
    margin-left: calc(2rem * calc(1 - 0)) !important;
    margin-left: calc(2rem * calc(1 - var(--tw-space-x-reverse))) !important;
  }

  .md\:space-y-0 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-y-reverse: 0 !important;
    margin-top: calc(0px * (1 - 0)) !important;
    margin-top: calc(0px * (1 - var(--tw-space-y-reverse))) !important;
    margin-top: calc(0px * calc(1 - 0)) !important;
    margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse))) !important;
    margin-bottom: calc(0px * 0) !important;
    margin-bottom: calc(0px * var(--tw-space-y-reverse)) !important;
  }

  .md\:space-y-16 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-y-reverse: 0 !important;
    margin-top: calc(4rem * (1 - 0)) !important;
    margin-top: calc(4rem * (1 - var(--tw-space-y-reverse))) !important;
    margin-top: calc(4rem * calc(1 - 0)) !important;
    margin-top: calc(4rem * calc(1 - var(--tw-space-y-reverse))) !important;
    margin-bottom: calc(4rem * 0) !important;
    margin-bottom: calc(4rem * var(--tw-space-y-reverse)) !important;
  }

  .md\:px-8 {
    padding-left: 2rem !important;
    padding-right: 2rem !important;
  }

  .md\:py-0 {
    padding-top: 0px !important;
    padding-bottom: 0px !important;
  }

  .md\:py-16 {
    padding-top: 4rem !important;
    padding-bottom: 4rem !important;
  }

  .md\:py-24 {
    padding-top: 6rem !important;
    padding-bottom: 6rem !important;
  }

  .md\:pb-16 {
    padding-bottom: 4rem !important;
  }

  .md\:text-right {
    text-align: right !important;
  }

  .md\:text-2xl {
    font-size: 1.5rem !important;
    line-height: 2rem !important;
  }
}
@media (min-width: 1024px) {

  .lg\:left-8 {
    left: 2rem !important;
  }

  .lg\:right-8 {
    right: 2rem !important;
  }

  .lg\:-mr-16 {
    margin-right: -4rem !important;
  }

  .lg\:mt-0 {
    margin-top: 0px !important;
  }

  .lg\:mt-20 {
    margin-top: 5rem !important;
  }

  .lg\:block {
    display: block !important;
  }

  .lg\:hidden {
    display: none !important;
  }

  .lg\:h-120 {
    height: 30rem !important;
  }

  .lg\:h-40 {
    height: 10rem !important;
  }

  .lg\:h-75vh {
    height: 75vh !important;
  }

  .lg\:w-1\/2 {
    width: 50% !important;
  }

  .lg\:w-3\/4 {
    width: 75% !important;
  }

  .lg\:w-36 {
    width: 9rem !important;
  }

  .lg\:w-5\/12 {
    width: 41.666667% !important;
  }

  .lg\:w-7\/12 {
    width: 58.333333% !important;
  }

  .lg\:flex-row {
    flex-direction: row !important;
  }

  .lg\:items-start {
    align-items: flex-start !important;
  }

  .lg\:justify-between {
    justify-content: space-between !important;
  }

  .lg\:px-0 {
    padding-left: 0px !important;
    padding-right: 0px !important;
  }

  .lg\:px-8 {
    padding-left: 2rem !important;
    padding-right: 2rem !important;
  }

  .lg\:py-32 {
    padding-top: 8rem !important;
    padding-bottom: 8rem !important;
  }

  .lg\:text-3xl {
    font-size: 1.875rem !important;
    line-height: 2.25rem !important;
  }
}
@media (min-width: 1280px) {

  .xl\:left-16 {
    left: 4rem !important;
  }

  .xl\:right-16 {
    right: 4rem !important;
  }

  .xl\:mx-0 {
    margin-left: 0px !important;
    margin-right: 0px !important;
  }

  .xl\:mx-auto {
    margin-left: auto !important;
    margin-right: auto !important;
  }

  .xl\:my-0 {
    margin-top: 0px !important;
    margin-bottom: 0px !important;
  }

  .xl\:-mr-1\/6 {
    margin-right: -16.666667% !important;
  }

  .xl\:-mt-20 {
    margin-top: -5rem !important;
  }

  .xl\:mb-16 {
    margin-bottom: 4rem !important;
  }

  .xl\:h-40 {
    height: 10rem !important;
  }

  .xl\:w-5\/6 {
    width: 83.333333% !important;
  }

  .xl\:w-6\/12 {
    width: 50% !important;
  }

  .xl\:w-8\/12 {
    width: 66.666667% !important;
  }

  .xl\:w-9\/12 {
    width: 75% !important;
  }

  .xl\:max-w-screen-lg {
    max-width: 1024px !important;
  }

  .xl\:max-w-screen-xl {
    max-width: 1280px !important;
  }

  .xl\:px-0 {
    padding-left: 0px !important;
    padding-right: 0px !important;
  }

  .xl\:px-2 {
    padding-left: 0.5rem !important;
    padding-right: 0.5rem !important;
  }

  .xl\:py-40 {
    padding-top: 10rem !important;
    padding-bottom: 10rem !important;
  }

  .xl\:pr-0 {
    padding-right: 0px !important;
  }

  .xl\:text-2xl {
    font-size: 1.5rem !important;
    line-height: 2rem !important;
  }

  .xl\:text-3xl {
    font-size: 1.875rem !important;
    line-height: 2.25rem !important;
  }

  .xl\:text-4xl {
    font-size: 2.25rem !important;
    line-height: 2.5rem !important;
  }

  .xl\:text-xl {
    font-size: 1.25rem !important;
    line-height: 1.75rem !important;
  }
}
@media (min-width: 1640px) {

  .\32xl\:left-32 {
    left: 8rem !important;
  }

  .\32xl\:right-32 {
    right: 8rem !important;
  }

  .\32xl\:-mr-16 {
    margin-right: -4rem !important;
  }

  .\32xl\:flex {
    display: flex !important;
  }

  .\32xl\:hidden {
    display: none !important;
  }

  .\32xl\:w-2\/3 {
    width: 66.666667% !important;
  }
}
